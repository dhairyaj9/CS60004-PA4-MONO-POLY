public class T3 extends Animal
{
    int carnivore;

    public void <init>(int, int)
    {
        T3 r0;
        int i0, i1;

        r0 := @this: T3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<Animal: void <init>(int)>(i0);

        r0.<T3: int carnivore> = i1;

        return;
    }

    public void new_leg(int)
    {
        T3 r0;
        int i0;

        r0 := @this: T3;

        i0 := @parameter0: int;

        r0.<T3: int legs> = i0;

        return;
    }

    public static void main(java.lang.String[])
    {
        T3 $r0;
        int i1, i2;
        java.io.PrintStream $r2, $r3;
        java.lang.String[] r4;

        r4 := @parameter0: java.lang.String[];

        $r0 = new T3;

        specialinvoke $r0.<T3: void <init>(int,int)>(4, 1);

        i1 = virtualinvoke $r0.<T3: int getlegs()>();

        virtualinvoke $r0.<T3: void new_leg(int)>(3);

        i2 = virtualinvoke $r0.<T3: int getlegs()>();

        $r2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r2.<java.io.PrintStream: void println(int)>(i1);

        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(int)>(i2);

        return;
    }

    public volatile int getlegs()
    {
        T3 r0;
        int $i0;

        r0 := @this: T3;

        $i0 = specialinvoke r0.<Animal: int getlegs()>();

        return $i0;
    }
}
