class T1_C extends T1_A
{
    public T1_A a3;

    void <init>()
    {
        T1_C r0;

        r0 := @this: T1_C;

        specialinvoke r0.<T1_A: void <init>()>();

        return;
    }

    public T1_A foo(T1_A)
    {
        T1_A r0, $r2;
        T1_C $r1, r3, r4;

        r3 := @this: T1_C;

        r0 := @parameter0: T1_A;

        r4 = new T1_C;

        specialinvoke r4.<T1_C: void <init>()>();

        r0.<T1_A: T1_A a1> = r4;

        $r1 = new T1_C;

        specialinvoke $r1.<T1_C: void <init>()>();

        r4.<T1_C: T1_A a3> = $r1;

        $r2 = r4.<T1_C: T1_A a3>;

        return $r2;
    }

    static T1_A foo_static(T1_A, T1_C)
    {
        T1_A r0, $r2;
        T1_C $r1, r3, r4;

        r0 := @parameter0: T1_A;

        r3 := @parameter1: T1_C;

        r4 = new T1_C;

        specialinvoke r4.<T1_C: void <init>()>();

        r0.<T1_A: T1_A a1> = r4;

        $r1 = new T1_C;

        specialinvoke $r1.<T1_C: void <init>()>();

        r4.<T1_C: T1_A a3> = $r1;

        $r2 = r4.<T1_C: T1_A a3>;

        return $r2;
    }

    public int zar(int)
    {
        int $i0, i1, i2, i3, i4, i5;
        T1_C r0;

        r0 := @this: T1_C;

        i1 := @parameter0: int;

        i2 = 0;

     label1:
        if i2 >= 100 goto label2;

        i1 = i1 + 1;

        i2 = i2 + 1;

        goto label1;

     label2:
        i3 = 0;

     label3:
        if i3 >= 50 goto label4;

        i1 = i1 + -2;

        i3 = i3 + 1;

        goto label3;

     label4:
        i4 = 0;

     label5:
        if i4 >= 100 goto label6;

        i1 = i1 + 1;

        i4 = i4 + 1;

        goto label5;

     label6:
        i5 = 0;

     label7:
        if i5 >= 50 goto label8;

        i1 = i1 + -2;

        i5 = i5 + 1;

        goto label7;

     label8:
        $i0 = i1 + 5;

        return $i0;
    }

    static int zar_static(int, T1_C)
    {
        int $i0, i1, i2, i3, i4, i5;
        T1_C r0;

        i1 := @parameter0: int;

        r0 := @parameter1: T1_C;

        i2 = 0;

     label1:
        if i2 >= 100 goto label2;

        i1 = i1 + 1;

        i2 = i2 + 1;

        goto label1;

     label2:
        i3 = 0;

     label3:
        if i3 >= 50 goto label4;

        i1 = i1 + -2;

        i3 = i3 + 1;

        goto label3;

     label4:
        i4 = 0;

     label5:
        if i4 >= 100 goto label6;

        i1 = i1 + 1;

        i4 = i4 + 1;

        goto label5;

     label6:
        i5 = 0;

     label7:
        if i5 >= 50 goto label8;

        i1 = i1 + -2;

        i5 = i5 + 1;

        goto label7;

     label8:
        $i0 = i1 + 5;

        return $i0;
    }
}
